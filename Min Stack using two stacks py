class MinStack:

    def __init__(self):
        self.stack = []
        self.minStack = []

    def push(self, val: int) -> None:
        self.stack.append(val)
        if self.minStack:
            x = self.minStack[-1]
            if x<val:
                self.minStack.append(x)
            else: self.minStack.append(val) 
        else: self.minStack.append(val)        

    def pop(self) -> None:
        self.stack.pop()
        self.minStack.pop()

    def top(self) -> int:
        if self.stack == []: return None
        return self.stack[-1]
        
        

    def getMin(self) -> int:
        if self.stack == []: return None
        return self.minStack[-1]


# Your MinStack object will be instantiated and called as such:
# obj = MinStack()
# obj.push(val)
# obj.pop()
# param_3 = obj.top()
# param_4 = obj.getMin()
