class StockPrice:

    def __init__(self):
        self.stockRecord = {}
        self.latestTimestamp = 0
        self.maxPriceTracking = []
        self.minPriceTracking = []
        
    def update(self, timestamp: int, price: int) -> None:
        self.stockRecord[timestamp] = price
        if timestamp > self.latestTimestamp:
            self.latestTimestamp = timestamp
        heappush(self.maxPriceTracking, [-price, timestamp])
        heappush(self.minPriceTracking, [price, timestamp])
               
    def current(self) -> int:
        return self.stockRecord[self.latestTimestamp]

    def maximum(self) -> int:
        while self.stockRecord[self.maxPriceTracking[0][1]] != -self.maxPriceTracking[0][0]:
            heappop(self.maxPriceTracking)
        return -self.maxPriceTracking[0][0]
                 
    def minimum(self) -> int:
        while self.stockRecord[self.minPriceTracking[0][1]] != self.minPriceTracking[0][0]:
            heappop(self.minPriceTracking)
        return self.minPriceTracking[0][0]


# Your StockPrice object will be instantiated and called as such:
# obj = StockPrice()
# obj.update(timestamp,price)
# param_2 = obj.current()
# param_3 = obj.maximum()
# param_4 = obj.minimum()
