######## Solution Using DP #####################
class Solution:
    def canPartition(self, nums: List[int]) -> bool:
        if len(nums) == 1: return False
        totalsum = 0
        for i in nums:
            totalsum += i
        if totalsum % 2 != 0:
            return False
        totalsum = int(totalsum / 2)
        row, col = len(nums)+1, totalsum+1
        memo = [[False for i in range(col)] for j in range(row)]
        memo[0][0] = True
        for i in range(1, row):
            for j in range(col):
                if j-nums[i-1] >= 0:
                    memo[i][j] = memo[i-1][j] or memo[i-1][j-nums[i-1]]
                else:   
                    memo[i][j] = memo[i-1][j]  
                
        return memo[row-1][col-1]     
