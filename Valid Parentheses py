#Solution 1:

class Solution:
    def isValid(self, s: str) -> bool:
        stack = []
        dict = {"]":"[", "}":"{", ")":"("}
        for char in s:
            if char in dict.values():
                stack.append(char)
            elif char in dict.keys():
                if stack == [] or dict[char] != stack.pop():
                    return False
            else:
                return False
        return stack == []
        
        
        /***********************************************?

Solution 2:
class Solution:
    def isValid(self, s: str) -> bool:
        if len(s) == 0 or len(s) == 1: return False
        stack = []
        for i in range(len(s)):
            c = s[i]
            if c == ')':
                if len(stack) == 0 or stack.pop() != '(':
                    return False
            elif c == ']':
                if len(stack) == 0 or stack.pop() != '[':
                    return False    
            elif c == '}':
                if len(stack) == 0 or stack.pop() != '{':
                    return False
            else: stack.append(c)  
                
        if len(stack) == 0 : return True
        else: return False
