# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    allPaths = []
    def binaryTreePaths(self, root: Optional[TreeNode]) -> List[str]:
        def dfs(root, path):
            if path == '':
                path += str(root.val)
            else:
                path += '->' + str(root.val)
            if not root.left and not root.right:
                self.allPaths.append(path)
                return     
            if root.left:
                dfs(root.left, path)
            if root.right:
                dfs(root.right, path)
            return 
        
        self.allPaths = []
        dfs(root, '')
        return self.allPaths
