class Solution:
    def maxProfit(self, prices: List[int], fee: int) -> int:
        memo = {}
        def buySell(i, alreadyBought):
            if (i, alreadyBought) in memo:
                return memo[(i, alreadyBought)]
            
            if i >= len(prices):
                return 0
            
            if not alreadyBought:
                dontBuy = buySell(i+1, False) 
                buy = buySell(i+1, True) - prices[i] - fee
                memo[(i, alreadyBought)] = max(dontBuy, buy)
                return memo[(i, alreadyBought)]
            else:
                sell = buySell(i+1, False)  + prices[i]
                dontSell = buySell(i+1, True) 
                memo[(i, alreadyBought)] =  max(sell, dontSell)
                return memo[(i, alreadyBought)]
        return buySell(0, False)

            
        
            
            
