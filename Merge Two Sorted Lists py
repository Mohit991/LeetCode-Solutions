# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        if list1 == None and list2 == None: return None
        if list1 == None: return list2
        if list2 == None: return list1
        i = 0
        j = 0
        new = ListNode()
        head = new
        prev = new
        if list1.val < list2.val:
            new.val = list1.val
            list1 = list1.next
        else: 
            new.val = list2.val
            list2 = list2.next
        while(list1 != None and list2 != None):
            newnode = ListNode()
            if list1.val < list2.val:
                newnode.val = list1.val
                list1 = list1.next
            else: 
                newnode.val = list2.val
                list2 = list2.next
            prev.next = newnode
            prev = newnode
            
        if list1 != None:
            prev.next = list1
        if list2 != None:
            prev.next = list2
            
        return head    
            
        
